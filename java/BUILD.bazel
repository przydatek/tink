load("@build_bazel_rules_android//android:rules.bzl", "android_library")

package(default_visibility = ["//:__subpackages__"])

licenses(["notice"])

# protos

java_proto_library(
    name = "common_java_proto",
    deps = ["@tink//proto:common_proto"],
)

java_lite_proto_library(
    name = "common_java_proto_lite",
    deps = ["@tink//proto:common_proto"],
)

java_proto_library(
    name = "tink_java_proto",
    deps = ["@tink//proto:tink_proto"],
)

java_lite_proto_library(
    name = "tink_java_proto_lite",
    deps = ["@tink//proto:tink_proto"],
)

java_proto_library(
    name = "config_java_proto",
    deps = ["@tink//proto:config_proto"],
)

java_lite_proto_library(
    name = "config_java_proto_lite",
    deps = ["@tink//proto:config_proto"],
)

java_proto_library(
    name = "aes_siv_java_proto",
    deps = ["@tink//proto:aes_siv_proto"],
)

java_lite_proto_library(
    name = "aes_siv_java_proto_lite",
    deps = ["@tink//proto:aes_siv_proto"],
)

java_proto_library(
    name = "rsa_ssa_pkcs1_java_proto",
    deps = ["@tink//proto:rsa_ssa_pkcs1_proto"],
)

java_lite_proto_library(
    name = "rsa_ssa_pkcs1_java_proto_lite",
    deps = ["@tink//proto:rsa_ssa_pkcs1_proto"],
)

java_proto_library(
    name = "rsa_ssa_pss_java_proto",
    deps = ["@tink//proto:rsa_ssa_pss_proto"],
)

java_lite_proto_library(
    name = "rsa_ssa_pss_java_proto_lite",
    deps = ["@tink//proto:rsa_ssa_pss_proto"],
)

java_proto_library(
    name = "ecdsa_java_proto",
    deps = ["@tink//proto:ecdsa_proto"],
)

java_lite_proto_library(
    name = "ecdsa_java_proto_lite",
    deps = ["@tink//proto:ecdsa_proto"],
)

java_proto_library(
    name = "ed25519_java_proto",
    deps = ["@tink//proto:ed25519_proto"],
)

java_lite_proto_library(
    name = "ed25519_java_proto_lite",
    deps = ["@tink//proto:ed25519_proto"],
)

java_proto_library(
    name = "aes_cmac_java_proto",
    deps = ["@tink//proto:aes_cmac_proto"],
)

java_lite_proto_library(
    name = "aes_cmac_java_proto_lite",
    deps = ["@tink//proto:aes_cmac_proto"],
)

java_proto_library(
    name = "hmac_java_proto",
    deps = ["@tink//proto:hmac_proto"],
)

java_lite_proto_library(
    name = "hmac_java_proto_lite",
    deps = ["@tink//proto:hmac_proto"],
)

java_proto_library(
    name = "aes_ctr_java_proto",
    deps = ["@tink//proto:aes_ctr_proto"],
)

java_lite_proto_library(
    name = "aes_ctr_java_proto_lite",
    deps = ["@tink//proto:aes_ctr_proto"],
)

java_proto_library(
    name = "aes_ctr_hmac_aead_java_proto",
    deps = ["@tink//proto:aes_ctr_hmac_aead_proto"],
)

java_lite_proto_library(
    name = "aes_ctr_hmac_aead_java_proto_lite",
    deps = ["@tink//proto:aes_ctr_hmac_aead_proto"],
)

java_proto_library(
    name = "aes_gcm_java_proto",
    deps = ["@tink//proto:aes_gcm_proto"],
)

java_lite_proto_library(
    name = "aes_gcm_java_proto_lite",
    deps = ["@tink//proto:aes_gcm_proto"],
)

java_proto_library(
    name = "aes_gcm_siv_java_proto",
    deps = ["@tink//proto:aes_gcm_siv_proto"],
)

java_lite_proto_library(
    name = "aes_gcm_siv_java_proto_lite",
    deps = ["@tink//proto:aes_gcm_siv_proto"],
)

java_proto_library(
    name = "aes_ctr_hmac_streaming_java_proto",
    deps = ["@tink//proto:aes_ctr_hmac_streaming_proto"],
)

java_lite_proto_library(
    name = "aes_ctr_hmac_streaming_java_proto_lite",
    deps = ["@tink//proto:aes_ctr_hmac_streaming_proto"],
)

java_proto_library(
    name = "aes_gcm_hkdf_streaming_java_proto",
    deps = ["@tink//proto:aes_gcm_hkdf_streaming_proto"],
)

java_lite_proto_library(
    name = "aes_gcm_hkdf_streaming_java_proto_lite",
    deps = ["@tink//proto:aes_gcm_hkdf_streaming_proto"],
)

java_proto_library(
    name = "aes_eax_java_proto",
    deps = ["@tink//proto:aes_eax_proto"],
)

java_lite_proto_library(
    name = "aes_eax_java_proto_lite",
    deps = ["@tink//proto:aes_eax_proto"],
)

java_proto_library(
    name = "chacha20_poly1305_java_proto",
    deps = ["@tink//proto:chacha20_poly1305_proto"],
)

java_lite_proto_library(
    name = "chacha20_poly1305_java_proto_lite",
    deps = ["@tink//proto:chacha20_poly1305_proto"],
)

java_proto_library(
    name = "kms_aead_java_proto",
    deps = ["@tink//proto:kms_aead_proto"],
)

java_lite_proto_library(
    name = "kms_aead_java_proto_lite",
    deps = ["@tink//proto:kms_aead_proto"],
)

java_proto_library(
    name = "kms_envelope_java_proto",
    deps = ["@tink//proto:kms_envelope_proto"],
)

java_lite_proto_library(
    name = "kms_envelope_java_proto_lite",
    deps = ["@tink//proto:kms_envelope_proto"],
)

java_proto_library(
    name = "ecies_aead_hkdf_java_proto",
    deps = ["@tink//proto:ecies_aead_hkdf_proto"],
)

java_lite_proto_library(
    name = "ecies_aead_hkdf_java_proto_lite",
    deps = ["@tink//proto:ecies_aead_hkdf_proto"],
)

java_proto_library(
    name = "xchacha20_poly1305_java_proto",
    deps = ["@tink//proto:xchacha20_poly1305_proto"],
)

java_lite_proto_library(
    name = "xchacha20_poly1305_java_proto_lite",
    deps = ["@tink//proto:xchacha20_poly1305_proto"],
)

java_proto_library(
    name = "hkdf_prf_java_proto",
    deps = ["@tink//proto:hkdf_prf_proto"],
)

java_lite_proto_library(
    name = "hkdf_prf_java_proto_lite",
    deps = ["@tink//proto:hkdf_prf_proto"],
)

java_proto_library(
    name = "prf_based_deriver_java_proto",
    deps = ["@tink//proto:prf_based_deriver_proto"],
)

java_lite_proto_library(
    name = "prf_based_deriver_java_proto_lite",
    deps = ["@tink//proto:prf_based_deriver_proto"],
)

java_proto_library(
    name = "empty_java_proto",
    deps = ["@tink//proto:empty_proto"],
)

java_lite_proto_library(
    name = "empty_java_proto_lite",
    deps = ["@tink//proto:empty_proto"],
)


full_proto_deps = [
    "//:aes_cmac_java_proto",
    "//:aes_ctr_hmac_aead_java_proto",
    "//:aes_ctr_hmac_streaming_java_proto",
    "//:aes_ctr_java_proto",
    "//:aes_eax_java_proto",
    "//:aes_gcm_hkdf_streaming_java_proto",
    "//:aes_gcm_java_proto",
    "//:aes_siv_java_proto",
    "//:chacha20_poly1305_java_proto",
    "//:common_java_proto",
    "//:config_java_proto",
    "//:empty_java_proto",
    "//:ecdsa_java_proto",
    "//:rsa_ssa_pkcs1_java_proto",
    "//:rsa_ssa_pss_java_proto",
    "//:ecies_aead_hkdf_java_proto",
    "//:ed25519_java_proto",
    "//:hkdf_prf_java_proto",
    "//:hmac_java_proto",
    "//:kms_aead_java_proto",
    "//:kms_envelope_java_proto",
    "//:tink_java_proto",
    "//:xchacha20_poly1305_java_proto",
]

lite_proto_deps = [
    "//:aes_cmac_java_proto_lite",
    "//:aes_ctr_hmac_aead_java_proto_lite",
    "//:aes_ctr_hmac_streaming_java_proto_lite",
    "//:aes_ctr_java_proto_lite",
    "//:aes_eax_java_proto_lite",
    "//:aes_gcm_hkdf_streaming_java_proto_lite",
    "//:aes_gcm_java_proto_lite",
    "//:aes_siv_java_proto_lite",
    "//:chacha20_poly1305_java_proto_lite",
    "//:common_java_proto_lite",
    "//:config_java_proto_lite",
    "//:empty_java_proto_lite",
    "//:ecdsa_java_proto_lite",
    "//:rsa_ssa_pkcs1_java_proto_lite",
    "//:rsa_ssa_pss_java_proto_lite",
    "//:ecies_aead_hkdf_java_proto_lite",
    "//:ed25519_java_proto_lite",
    "//:hkdf_prf_java_proto_lite",
    "//:hmac_java_proto_lite",
    "//:kms_aead_java_proto_lite",
    "//:kms_envelope_java_proto_lite",
    "//:tink_java_proto_lite",
    "//:xchacha20_poly1305_java_proto_lite",
]

subtle_deps = [
    "//src/main/java/com/google/crypto/tink:primitives",
    "//src/main/java/com/google/crypto/tink/subtle",
    "//src/main/java/com/google/crypto/tink/subtle:aead",
    "//src/main/java/com/google/crypto/tink/subtle:daead",
    "//src/main/java/com/google/crypto/tink/subtle:hybrid",
    "//src/main/java/com/google/crypto/tink/subtle:keywrap",
    "//src/main/java/com/google/crypto/tink/subtle:mac",
    "//src/main/java/com/google/crypto/tink/subtle:signature",
    "//src/main/java/com/google/crypto/tink/subtle:streaming",
    "//src/main/java/com/google/crypto/tink/subtle:x25519",
    "//src/main/java/com/google/crypto/tink/subtle/prf",
]

java_deps = [
    "//src/main/java/com/google/crypto/tink",
    "//src/main/java/com/google/crypto/tink/aead",
    "//src/main/java/com/google/crypto/tink/config",
    "//src/main/java/com/google/crypto/tink/daead",
    "//src/main/java/com/google/crypto/tink/hybrid",
    "//src/main/java/com/google/crypto/tink/mac",
    "//src/main/java/com/google/crypto/tink/signature",
    "//src/main/java/com/google/crypto/tink/streamingaead",
    "//src/main/java/com/google/crypto/tink/util",
]

android_deps = [
    "//src/main/java/com/google/crypto/tink:android",
    "//src/main/java/com/google/crypto/tink/aead:android",
    "//src/main/java/com/google/crypto/tink/config:android",
    "//src/main/java/com/google/crypto/tink/daead:android",
    "//src/main/java/com/google/crypto/tink/hybrid:android",
    "//src/main/java/com/google/crypto/tink/integration/android",
    "//src/main/java/com/google/crypto/tink/mac:android",
    "//src/main/java/com/google/crypto/tink/signature:android",
    "//src/main/java/com/google/crypto/tink/streamingaead:android",
]

cleartext_deps = [
    "//src/main/java/com/google/crypto/tink:cleartext_keyset_handle",
]

cleartext_android_deps = [
    "//src/main/java/com/google/crypto/tink:cleartext_keyset_handle_android",
]

# PUBLIC

java_library(
    name = "java",
    visibility = ["//visibility:public"],
    exports = java_deps,
)

java_library(
    name = "awskms",
    visibility = ["//visibility:public"],
    exports = [
        "//src/main/java/com/google/crypto/tink/integration/awskms",
    ],
)

java_library(
    name = "gcpkms",
    visibility = ["//visibility:public"],
    exports = [
        "//src/main/java/com/google/crypto/tink/integration/gcpkms",
    ],
)

# like :java, but for Android
android_library(
    name = "android",
    visibility = ["//visibility:public"],
    exports = android_deps,
)

# RESTRICTED

java_library(
    name = "protos",
    exports = full_proto_deps,
)

java_library(
    name = "protos_android",
    exports = lite_proto_deps,
)

java_library(
    name = "cleartext_keyset_handle",
    exports = cleartext_deps,
)

java_library(
    name = "cleartext_keyset_handle_android",
    exports = cleartext_android_deps,
)

java_library(
    name = "subtle",
    exports = subtle_deps,
)

# Maven jars

load("//tools:gen_maven_jar_rules.bzl", "gen_maven_jar_rules")

gen_maven_jar_rules(
    name = "tink",
    doctitle = "Tink Cryptography API",
    deps = full_proto_deps + java_deps + cleartext_deps + subtle_deps,
)

gen_maven_jar_rules(
    name = "tink-awskms",
    doctitle = "Tink Cryptography API with AWS KMS",
    deps = [
        "//src/main/java/com/google/crypto/tink/integration/awskms",
    ],
)

gen_maven_jar_rules(
    name = "tink-gcpkms",
    doctitle = "Tink Cryptography API with Google Cloud KMS",
    deps = [
        "//src/main/java/com/google/crypto/tink/integration/gcpkms",
    ],
)

gen_maven_jar_rules(
    name = "tink-android",
    doctitle = "Tink Cryptography API for Android",
    deps = lite_proto_deps + android_deps + cleartext_android_deps + subtle_deps,
)

# TEST

java_library(
    name = "testonly",
    testonly = 1,
    visibility = [
        "//visibility:public",
    ],
    exports = [
        ":cleartext_keyset_handle",
        ":java",
        ":protos",
        ":subtle",
    ],
)

android_library(
    name = "testonly_android",
    testonly = 1,
    visibility = ["//visibility:public"],
    exports = [
        ":android",
        ":cleartext_keyset_handle_android",
        ":protos_android",
        ":subtle",
    ],
)

java_library(
    name = "testutil",
    testonly = 1,
    exports = ["//src/main/java/com/google/crypto/tink/testing:test_util"],
)

# tests

load("//tools:gen_java_test_rules.bzl", "gen_java_test_rules")

java_library(
    name = "generator_test",
    testonly = 1,
    srcs = glob([
        "src/test/**/*.java",
    ]),
    deps = [
        ":awskms",
        ":gcpkms",
        ":testonly",
        "//src/main/java/com/google/crypto/tink/prf:hkdf_prf_key_manager",
        "//src/main/java/com/google/crypto/tink/prf:prf_key_templates",
        "//src/main/java/com/google/crypto/tink/testing:streaming_test_util",
        "//src/main/java/com/google/crypto/tink/testing:test_util",
        "//src/main/java/com/google/crypto/tink/testing:wycheproof_test_util",
        "@com_google_protobuf_javalite//:protobuf_java_lite",
        "@maven//:com_amazonaws_aws_java_sdk_core",
        "@maven//:com_amazonaws_aws_java_sdk_kms",
        "@maven//:com_google_api_client_google_api_client",
        "@maven//:com_google_http_client_google_http_client",
        "@maven//:com_google_truth_truth",
        "@maven//:junit_junit",
        "@maven//:org_json_json",
        "@maven//:org_mockito_mockito_core",
    ],
)

# Anything in test_files will be a small sized test unless specified in an explicit category.
# Don't hesitate to increase the length when writing legitimately longer tests.
gen_java_test_rules(
    data = [
        "@tink//testdata:credentials",
        "@tink//testdata:ecies_keysets",
        "@wycheproof//testvectors:all",
    ],
    default_test_size = "small",
    # these tests are excluded when testing with bazel test ... or on Kokoro
    manual_tests = [
        "src/test/java/com/google/crypto/tink/subtle/AesGcmJceTest",
        "src/test/java/com/google/crypto/tink/subtle/AesGcmHkdfStreamingTest",
        # b/112019120
        "src/test/java/com/google/crypto/tink/subtle/RsaSsaPkcs1VerifyJceTest",
    ],
    medium_tests = [
        "src/test/java/com/google/crypto/tink/subtle/AesCtrHmacStreamingTest",
        "src/test/java/com/google/crypto/tink/subtle/AesGcmJceTest",
        "src/test/java/com/google/crypto/tink/hybrid/EciesAeadHkdfHybridDecryptTest",
    ],
    no_rbe_tests = [
        "src/test/java/com/google/crypto/tink/aead/KmsAeadKeyManagerTest",
        "src/test/java/com/google/crypto/tink/aead/KmsEnvelopeAeadKeyManagerTest",
    ],
    test_files = glob(
        [
            "src/test/**/*Test.java",
        ],
    ),
    deps = [
        ":generator_test",
    ],
)
